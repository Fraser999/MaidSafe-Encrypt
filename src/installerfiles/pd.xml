<project>
    <shortName>pd</shortName>
    <fullName>Perpetual Data</fullName>
    <version>5</version>
    <installerFilename></installerFilename>
    <readmeFile>README</readmeFile>
    <licenseFile>EULA_001.txt</licenseFile>
    <postInstallationActionList>
        <addDirectoryToPath>
            <insertAt>end</insertAt>
            <path>${installdir}</path>
        </addDirectoryToPath>
        <writeFile>
            <path>${installdir}/addmaidsafeuser.sh</path>
            <text>#!/bin/bash

if  grep -v maidsafe /etc/passwd ; then /usr/sbin/adduser --system --shell /bin/false --no-create-home maidsafe; fi ;  if [ -e /var/cache/maidsafe/ ];then   mkdir -p /var/cache/maidsafe ;  /bin/chown maidsafe.maidsafe /var/cache/maidsafe;fi
; /bin/chmod 755 /etc/init.d/vault</text>
            <ruleList>
                <platformTest>
                    <type>linux</type>
                </platformTest>
            </ruleList>
        </writeFile>
        <changePermissions>
            <files>${installdir}/addmaidsafeuser.sh</files>
            <permissions>+x</permissions>
            <ruleList>
                <platformTest>
                    <type>linux</type>
                </platformTest>
            </ruleList>
        </changePermissions>
        <runConsoleProgram>
            <program>${installdir}/addmaidsafeuser.sh</program>
            <programArguments></programArguments>
            <ruleList>
                <platformTest>
                    <type>linux</type>
                </platformTest>
            </ruleList>
        </runConsoleProgram>
    </postInstallationActionList>
    <allowComponentSelection>1</allowComponentSelection>
    <description>Serverless cloud file storage</description>
    <enableRollback>1</enableRollback>
    <enableTimestamp>1</enableTimestamp>
    <nativePackageName>maidsafePD</nativePackageName>
    <rebootRequired>1</rebootRequired>
    <registerWithPackageDatabase>1</registerWithPackageDatabase>
    <release>1</release>
    <requireInstallationByRootUser>1</requireInstallationByRootUser>
    <saveRelativePaths>1</saveRelativePaths>
    <summary>Serverless cloud file storage</summary>
    <vendor>maidsafe.net</vendor>
    <componentList>
        <component>
	<!-- client -->
	<name>client</name>
            <description>Client</description>
            <canBeEdited>1</canBeEdited>
            <detailedDescription>The Perpetual Data Client allows you to upload, retrieve and share your files through the Maidsafe Distributed Network</detailedDescription>
            <selected>1</selected>
            <show>1</show>
            <folderList>
                <folder>
                    <description>Program Files</description>
                    <destination>${installdir}</destination>
                    <name>programfiles</name>
                    <platforms>all</platforms>
                    <shortcutList>
                        <shortcut>
                            <comment>Uninstall</comment>
                            <exec>${installdir}/${uninstallerName}</exec>
                            <icon></icon>
                            <name>Uninstall ${product_fullname}</name>
                            <path>${installdir}</path>
                            <platforms>all</platforms>
                            <runInTerminal>0</runInTerminal>
                            <windowsExec>${installdir}/${uninstallerName}.exe</windowsExec>
                            <windowsExecArgs></windowsExecArgs>
                            <windowsIcon></windowsIcon>
                            <windowsPath>${installdir}</windowsPath>
                        </shortcut>
                    </shortcutList>
                </folder>
                <folder>
                    <description>Program Files</description>
                    <destination>${installdir}</destination>
                    <name>programfileslinux</name>
                    <platforms>linux</platforms>
                    <distributionFileList>
                        <distributionFile>
                            <origin>../../build/Linux/Release/bin/perpetualdata</origin>
                        </distributionFile>
                    </distributionFileList>
                </folder>
                <folder>
                    <description>Program Files</description>
                    <destination>${installdir}</destination>
                    <name>programfileswindows</name>
                    <platforms>windows</platforms>
                    <distributionFileList>
                        <distributionFile>
                            <origin>../../build/Win/Release/bin/perpetualdata.exe</origin>
                        </distributionFile>
                    </distributionFileList>
                </folder>
                <folder>
                    <description>Program Files</description>
                    <destination>${installdir}</destination>
                    <name>programfilesosx</name>
                    <platforms>osx</platforms>
                    <distributionFileList>
                        <distributionFile>
                            <origin>../../build/OSX/Release/bin/perpetualdata</origin>
                        </distributionFile>
                    </distributionFileList>
                </folder>
                <folder>
                    <description>libraries</description>
                    <destination>${windows_folder_systemroot}/system32</destination>
                    <name>libraries</name>
                    <platforms>windows</platforms>
                    <distributionFileList>
                        <distributionFile>
                            <origin>../../mounter.exe</origin>
                        </distributionFile>
                        <distributionFile>
                            <origin>../../dokan.dll</origin>
                        </distributionFile>
                        <distributionFile>
                            <origin>../../dokanctl.exe</origin>
                        </distributionFile>
                        <distributionFile>
                            <origin>../../mingwm10.dll</origin>
                        </distributionFile>
                        <distributionFile>
                            <origin>../../QtCore4.dll</origin>
                        </distributionFile>
                        <distributionFile>
                            <origin>../../QtCored4.dll</origin>
                        </distributionFile>
                        <distributionFile>
                            <origin>../../QtGui4.dll</origin>
                        </distributionFile>
                        <distributionFile>
                            <origin>../../QtGuid4.dll</origin>
                        </distributionFile>
                        <distributionFile>
                            <origin>../../../maidsafe-dht/trunk/src/build/Win/bin/libcryptopp.a</origin>
                        </distributionFile>
                        <distributionFile>
                            <origin>../../../maidsafe-dht/trunk/src/build/Win/bin/libcryptopp.dll</origin>
                        </distributionFile>
                        <distributionFile>
                            <origin>../../../maidsafe-dht/trunk/src/build/Win/bin/libmaidsafe.a</origin>
                        </distributionFile>
                        <distributionFile>
                            <origin>../../../maidsafe-dht/trunk/src/build/Win/bin/libmaidsafe.dll</origin>
                        </distributionFile>
                        <distributionFile>
                            <origin>../../../maidsafe-dht/trunk/src/build/Win/bin/libudt.a</origin>
                        </distributionFile>
                        <distributionFile>
                            <origin>../../../maidsafe-dht/trunk/src/build/Win/bin/libudt.dll</origin>
                        </distributionFile>
                    </distributionFileList>
                </folder>
                <folder>
                    <description>libs</description>
                    <destination>${windows_folder_systemroot}/system32/drivers</destination>
                    <name>libs</name>
                    <platforms>windows</platforms>
                    <distributionFileList>
                        <distributionFile>
                            <origin>../../dokan.sys</origin>
                        </distributionFile>
                    </distributionFileList>
                </folder>
                <folder>
                    <description>MaidsafeDrive</description>
                    <destination>${env(APPDATA)}\maidsafe</destination>
                    <name>maidsafedrive</name>
                    <platforms>windows</platforms>
                    <distributionFileList>
                        <distributionFile>
                            <origin>../../.kadconfig</origin>
                        </distributionFile>
                    </distributionFileList>
                </folder>
                <folder>
                    <description>MaidsafeVault</description>
                    <destination>${env(APPDATA)}\maidsafe\vault</destination>
                    <name>maidsafevault</name>
                    <platforms>windows</platforms>
                    <distributionFileList>
                        <distributionFile>
                            <origin>../../.kadconfig</origin>
                        </distributionFile>
                    </distributionFileList>
                </folder>
                <folder>
                    <description>usrsharepixmaps</description>
                    <destination>/usr/share/pixmaps/</destination>
                    <name>pixmaps</name>
                    <platforms>linux</platforms>
                    <distributionFileList>
                        <distributionFile>
                            <origin>../../build/install_files/maidsafe_logo.xpm</origin>
                        </distributionFile>
                    </distributionFileList>
                </folder>
                <folder>
                    <description>usrsharemenu</description>
                    <destination>/usr/share/menu/</destination>
                    <name>menu</name>
                    <platforms>linux</platforms>
                    <distributionFileList>
                        <distributionFile>
                            <origin>../../build/Linux/Release/bin/perpetualdata</origin>
                        </distributionFile>
                    </distributionFileList>
                </folder>
                <folder>
                    <description>usrshareapplications</description>
                    <destination>/usr/share/applications/</destination>
                    <name>applications</name>
                    <platforms>linux</platforms>
                    <distributionFileList>
                        <distributionFile>
                            <origin>../../build/install_files/perpetualdata.desktop</origin>
                        </distributionFile>
                        <distributionFile>
                            <origin>../../build/install_files/pdlocal.desktop</origin>
                        </distributionFile>
                        <distributionFile>
                            <origin>../../build/install_files/perpetualdatavault.desktop</origin>
                        </distributionFile>
                    </distributionFileList>
                </folder>
                <folder>
                    <description>varcachemaidsafe</description>
                    <destination>/var/cache/maidsafe/</destination>
                    <name>varcache</name>
                    <platforms>linux</platforms>
                    <distributionFileList>
                        <distributionFile>
                            <origin>../../.kadconfig</origin>
                        </distributionFile>
                    </distributionFileList>
                </folder>
            </folderList>
            <startMenuShortcutList>
                <startMenuShortcut>
                    <comment>Uninstall ${product_fullname}</comment>
                    <name>Uninstall ${product_fullname}</name>
                    <runInTerminal>0</runInTerminal>
                    <windowsExec>${installdir}/${uninstallerName}.exe</windowsExec>
                    <windowsExecArgs></windowsExecArgs>
                    <windowsIcon></windowsIcon>
                    <windowsPath>${installdir}/</windowsPath>
                </startMenuShortcut>
                <startMenuShortcut>
                    <comment></comment>
                    <name>Perpetual Data</name>
                    <runInTerminal>0</runInTerminal>
                    <windowsExec>${installdir}/perpetualdata</windowsExec>
                    <windowsExecArgs></windowsExecArgs>
                    <windowsIcon></windowsIcon>
                    <windowsPath></windowsPath>
                </startMenuShortcut>
            </startMenuShortcutList>
        </component>
        <component>
	<!-- vault -->
	<name>Vault</name>
            <description>Vault</description>
            <canBeEdited>1</canBeEdited>
            <detailedDescription>The component of the software that allows access to your data</detailedDescription>
            <selected>1</selected>
            <show>1</show>
            <folderList>
                <folder>
                    <description>Install Directory</description>
                    <destination>${installdir}</destination>
                    <name>installdir</name>
                    <platforms>all</platforms>
                </folder>
                <folder>
                    <description>etcinitd</description>
                    <destination>/etc/init.d/</destination>
                    <name>etcinitd</name>
                    <platforms>linux</platforms>
                    <distributionFileList>
                        <distributionFile>
                            <origin>../../build/Linux/Release/bin/vault</origin>
                        </distributionFile>
                    </distributionFileList>
                </folder>
                <folder>
                    <description>Install Directory</description>
                    <destination>${installdir}</destination>
                    <name>installdirW</name>
                    <platforms>windows</platforms>
                    <distributionFileList>
                        <distributionFile>
                            <origin>../../build/Win/Release/bin/vault.exe</origin>
                        </distributionFile>
                    </distributionFileList>
                </folder>
                <folder>
                    <description>DaemonDir</description>
                    <destination>/Library/LaunchDaemons</destination>
                    <name>Daemondir</name>
                    <platforms>osx</platforms>
                    <distributionFileList>
                        <distributionFile>
                            <origin>../../build/OSX/Release/bin/vault</origin>
                        </distributionFile>
                    </distributionFileList>
                </folder>
            </folderList>
            <postInstallationActionList>
                <createWindowsService>
                    <abortOnError>0</abortOnError>
                    <displayName>PDVault</displayName>
                    <program>${installdir}\vault.exe</program>
                    <programArguments></programArguments>
                    <serviceName>PDVault</serviceName>
                    <startType>auto</startType>
                </createWindowsService>
                <showChoiceQuestion>
                    <defaultValue>no</defaultValue>
                    <text>Start vault service?</text>
                    <title>Installation Successful</title>
                    <variable>startvaultservice</variable>
                    <optionList>
                        <option>
                            <description>Yes</description>
                            <image></image>
                            <text>Yes</text>
                            <value>yes</value>
                        </option>
                        <option>
                            <description>No</description>
                            <image></image>
                            <text>No</text>
                            <value>no</value>
                        </option>
                    </optionList>
                    <ruleList>
                        <platformTest>
                            <type>windows</type>
                        </platformTest>
                        <componentTest>
                            <logic>exists</logic>
                            <name>Vault</name>
                        </componentTest>
                    </ruleList>
                </showChoiceQuestion>
                <startWindowsService>
                    <abortOnError>0</abortOnError>
                    <delay>15000</delay>
                    <displayName>PDVault</displayName>
                    <serviceName>PDVault</serviceName>
                </startWindowsService>
                <addUnixService>
                    <description>The Vault component of Perpetual Data</description>
                    <name>PDVault</name>
                    <program>${installdir}/vault</program>
                </addUnixService>
                <registrySet>
                    <key>HKEY_LOCAL_MACHINE "Software\Microsoft\Windows\CurrentVersion\RunOnce\</key>
                    <name>maidsafe</name>
                    <type>REG_SZ</type>
                    <value>${windows_folder_systemroot}\system32\dokanctl.exe /i a</value>
                    <wowMode>32</wowMode>
                </registrySet>
            </postInstallationActionList>
            <preUninstallationActionList>
                <stopWindowsService>
                    <abortOnError>0</abortOnError>
                    <displayName>PDVault</displayName>
                    <serviceName>PDVault</serviceName>
                </stopWindowsService>
                <deleteWindowsService>
                    <abortOnError>0</abortOnError>
                    <displayName>PDVault</displayName>
                    <serviceName>PDVault</serviceName>
                </deleteWindowsService>
            </preUninstallationActionList>
        </component>

	<!-- Auto update -->
	<component>
            <name>autoupdater</name>
            <description>Auto Updater</description>
            <canBeEdited>0</canBeEdited>
            <selected>1</selected>
            <show>0</show>
            <folderList>
                <folder>
                    <description></description>
                    <destination>${installdir}</destination>
                    <name>autoupdaterwin</name>
                    <platforms>windows</platforms>
                    <distributionFileList>
                        <distributionFile>
                            <origin>../../../Program Files/BitRock InstallBuilder for Qt - Windows 6.2.7/autoupdate/output/autoupdate-windows.exe</origin>
                        </distributionFile>
                    </distributionFileList>
                </folder>
                <folder>
                    <description></description>
                    <destination>${installdir}</destination>
                    <name>autoupdaterlinux</name>
                    <platforms>linux</platforms>
                    <distributionFileList>
                        <distributionFile>
                            <origin>../../../installbuilder-6.3.0/autoupdate/output/autoupdate-linux.bin</origin>
                        </distributionFile>
                    </distributionFileList>
                </folder>
                <folder>
                    <description></description>
                    <destination>${installdir}</destination>
                    <name>autoupdaterosx</name>
                    <platforms>osx</platforms>
                    <distributionFileList>
                        <distributionFile origin="../../../../../Applications/BitRock InstallBuilder Enterprise 6.2.6/autoupdate/output/autoupdate-osx.app"/>
                    </distributionFileList>
                </folder>
            </folderList>
            <postInstallationActionList>
                <writeFile>
                    <path>${installdir}/update.ini</path>
                    <text>[update]
url = http://127.0.0.1/
version_id = 1
update_download_location = ${system_temp_directory}
check_for_updates = 1
            </text>
                </writeFile>
                <writeFile>
                    <path>${installdir}/chkupdate.sh</path>
                    <text>#!/bin/bash
${installdir}/autoupdate-linux.bin --mode unattended &gt; /dev/null 2&gt;&amp;1
if [ $? -eq 0 ]; then
  ${installdir}/autoupdate-linux.bin
else
  echo "Nothing to report..";
fi
                    </text>
                    <ruleList>
                        <platformTest>
                            <type>linux</type>
                        </platformTest>
                    </ruleList>
                </writeFile>
                <writeFile>
                    <path>${installdir}/chkupdate.sh</path>
                    <text>#!/bin/bash
${installdir}/autoupdate-osx.app/Contents/MacOS/osx-intel --mode unattended &gt; /dev/null 2&gt;&amp;1
if [ $? -eq 0 ]; then
  ${installdir}/autoupdate-osx.app/Contents/MacOS/osx-intel
else
  echo "Nothing to report..";
fi
                    </text>
                    <ruleList>
                        <platformTest>
                            <type>osx</type>
                        </platformTest>
                    </ruleList>
                </writeFile>
                <writeFile>
                    <path>${installdir}/chkupdate.bat</path>
                    <text>
${installdir}/autoupdate-windows.exe --mode unattended
if ERRORLEVEL 0
  ${installdir}/autoupdate-windows.exe
else
  echo "Nothing to report..";
fi
                    </text>
                    <ruleList>
                        <platformTest>
                            <type>windows</type>
                        </platformTest>
                    </ruleList>
                </writeFile>
                <runProgram>
                    <program>schtasks</program>
                    <programArguments>/create /sc hourly /tn "Perpetual Data AutoUpdate" /tr "${installdir}\chkupdate.bat"</programArguments>
                    <ruleList>
                        <platformTest>
                            <type>windows</type>
                        </platformTest>
                    </ruleList>
                </runProgram>

	<!-- Create an empty variable -->
	<setInstallerVariable name="crontab_content" value="">
                    <ruleList>
                        <platformTest>
                            <negate>1</negate>
                            <type>windows</type>
                        </platformTest>
                    </ruleList>
                </setInstallerVariable>

	<!-- Store in that variable the content (if exists) of the user crontab tasks -->
	<setInstallerVariableFromScriptOutput exec="crontab" execArgs="-l" name="crontab_content">
                    <abortOnError>0</abortOnError>
                    <showMessageOnError>0</showMessageOnError>
                </setInstallerVariableFromScriptOutput>

	<!-- Add the tasks you want to add to this variable -->
	<setInstallerVariable name="crontab_content">
                    <value>"${crontab_content}
@hourly ${installdir}/chkupdate.sh"</value>
                </setInstallerVariable>

	<!-- Add to crontab your tasks without removing existing one -->
	<runProgram>
                    <program>echo</program>
                    <programArguments>${crontab_content} | crontab -</programArguments>
                </runProgram>
                <changePermissions>
                    <files>chkupdate.sh</files>
                    <permissions>+x</permissions>
                    <ruleList>
                        <platformTest>
                            <negate>1</negate>
                            <type>windows</type>
                        </platformTest>
                    </ruleList>
                </changePermissions>
            </postInstallationActionList>
        </component>
    </componentList>
    <parameterList>
        <directoryParameter>
            <name>installdir</name>
            <description>Installer.Parameter.installdir.description</description>
            <explanation>Installer.Parameter.installdir.explanation</explanation>
            <value></value>
            <default>${platform_install_prefix}/${product_shortname}-${product_version}</default>
            <allowEmptyValue>0</allowEmptyValue>
            <ask>yes</ask>
            <cliOptionName>prefix</cliOptionName>
            <mustBeWritable>yes</mustBeWritable>
            <mustExist>0</mustExist>
            <width>30</width>
        </directoryParameter>
    </parameterList>
</project>

