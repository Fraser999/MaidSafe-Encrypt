<project>
    <shortName>pdlightlocal</shortName>
    <fullName>PDLightLocal</fullName>
    <version>0.0.005</version>
    <installerFilename>${product_shortname}-${product_version}-installer.${platform_exec_suffix}</installerFilename>
    <debugLevel>4</debugLevel>
    <readmeFile>${build_project_directory}/../text/pdlightlocal/readme.txt</readmeFile>
    <licenseFile>${build_project_directory}/../text/pdlightlocal/eula.txt</licenseFile>
    <leftImage>${build_project_directory}/../images/logo_left_panel.png</leftImage>
    <logoImage>${build_project_directory}/../images/logo_top_right.png</logoImage>
    <splashImage>${build_project_directory}/../images/logo_splash.png</splashImage>
    <wmImage>${build_project_directory}/../images/logo_main.png</wmImage>
    <preBuildActionList>
        <actionGroup>
            <explanation>Copy exes to install_files/</explanation>
            <actionList>
                <setInstallerVariable>
                    <name>EXECUTABLE_POSTFIX</name>
                    <value>.exe</value>
                    <ruleList>
                        <platformTest>
                            <type>windows</type>
                        </platformTest>
                    </ruleList>
                </setInstallerVariable>
                <setInstallerVariable>
                    <name>EXECUTABLE_POSTFIX</name>
                    <value></value>
                    <ruleList>
                        <platformTest>
                            <negate>1</negate>
                            <type>windows</type>
                        </platformTest>
                    </ruleList>
                </setInstallerVariable>
                <findFile>
                    <baseDirectory>${build_project_directory}/../../build/Win</baseDirectory>
                    <pattern>CMakeCache.txt</pattern>
                    <variable>CMAKECACHE_TXT</variable>
                    <ruleList>
                        <platformTest>
                            <type>windows</type>
                        </platformTest>
                    </ruleList>
                </findFile>
                <findFile>
                    <baseDirectory>${build_project_directory}/../../build/Linux</baseDirectory>
                    <pattern>CMakeCache.txt</pattern>
                    <variable>CMAKECACHE_TXT</variable>
                    <ruleList>
                        <platformTest>
                            <negate>1</negate>
                            <type>windows</type>
                        </platformTest>
                    </ruleList>
                </findFile>
                <propertiesFileGet>
                    <file>${CMAKECACHE_TXT}</file>
                    <key>CMAKE_RUNTIME_OUTPUT_DIRECTORY:PATH</key>
                    <variable>CMAKE_RUNTIME_OUTPUT_DIRECTORY</variable>
                </propertiesFileGet>
                <copyFile>
                    <destination>${build_project_directory}/../temp/</destination>
                    <origin>${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/Release/pdlightlocal${EXECUTABLE_POSTFIX}</origin>
                </copyFile>
                <propertiesFileGet>
                    <file>${CMAKECACHE_TXT}</file>
                    <key>QT_BINARY_DIR:INTERNAL</key>
                    <variable>QT_BINARY_DIR</variable>
                    <ruleList>
                        <platformTest>
                            <type>windows</type>
                        </platformTest>
                    </ruleList>
                </propertiesFileGet>
                <copyFile>
                    <destination>${build_project_directory}/../temp/</destination>
                    <origin>${QT_BINARY_DIR}/QtCore4.dll</origin>
                    <ruleList>
                        <platformTest>
                            <type>windows</type>
                        </platformTest>
                    </ruleList>
                </copyFile>
                <copyFile>
                    <destination>${build_project_directory}/../temp/</destination>
                    <origin>${QT_BINARY_DIR}/QtGui4.dll</origin>
                    <ruleList>
                        <platformTest>
                            <type>windows</type>
                        </platformTest>
                    </ruleList>
                </copyFile>
                <propertiesFileGet>
                    <abortOnError>0</abortOnError>
                    <file>${CMAKECACHE_TXT}</file>
                    <key>INSTALLBUILDER_ROOT_DIR:INTERNAL</key>
                    <showMessageOnError>0</showMessageOnError>
                    <variable>INSTALLBUILDER_ROOT_DIR</variable>
                </propertiesFileGet>
                <propertiesFileGet>
                    <file>${CMAKECACHE_TXT}</file>
                    <key>INSTALLBUILDER_ROOT_DIR_CACHED:PATH</key>
                    <variable>INSTALLBUILDER_ROOT_DIR</variable>
                    <ruleList>
                        <fileExists>
                            <negate>1</negate>
                            <path>${INSTALLBUILDER_ROOT_DIR}</path>
                        </fileExists>
                    </ruleList>
                </propertiesFileGet>
                <runProgram>
                    <customErrorMessage>Error running ${INSTALLBUILDER_ROOT_DIR}/autoupdate/bin/customize build ${build_project_directory}/pdlightlocal.xml </customErrorMessage>
                    <program>${INSTALLBUILDER_ROOT_DIR}/autoupdate/bin/customize</program>
                    <programArguments>build ${build_project_directory}/pdlightlocal.xml</programArguments>
                    <useMSDOSPath>0</useMSDOSPath>
                </runProgram>
                <findFile>
                    <baseDirectory>${INSTALLBUILDER_ROOT_DIR}/autoupdate/output</baseDirectory>
                    <customErrorMessage>Can't find ${INSTALLBUILDER_ROOT_DIR}/autoupdate/output/autoupdate-*</customErrorMessage>
                    <pattern>autoupdate-*</pattern>
                    <variable>AUTOUPDATE_EXE</variable>
                </findFile>
                <renameFile>
                    <destination>${build_project_directory}/../temp/autoupdate.${platform_exec_suffix}</destination>
                    <origin>${AUTOUPDATE_EXE}</origin>
                </renameFile>
                <copyFile>
                    <destination>${build_project_directory}/../temp/</destination>
                    <origin>${build_project_directory}/update_pdlightlocal.ini</origin>
                </copyFile>
                <renameFile>
                    <destination>${build_project_directory}/../temp/update.ini</destination>
                    <origin>${build_project_directory}/../temp/update_pdlightlocal.ini</origin>
                </renameFile>
            </actionList>
        </actionGroup>
    </preBuildActionList>
    <postBuildActionList>
        <deleteFile>
            <matchHiddenFiles>1</matchHiddenFiles>
            <path>${build_project_directory}/../temp/pdlightlocal${EXECUTABLE_POSTFIX}</path>
        </deleteFile>
        <deleteFile>
            <path>${build_project_directory}/../temp/QtCore4.dll</path>
            <ruleList>
                <platformTest>
                    <type>windows</type>
                </platformTest>
            </ruleList>
        </deleteFile>
        <deleteFile>
            <path>${build_project_directory}/../temp/QtGui4.dll</path>
            <ruleList>
                <platformTest>
                    <type>windows</type>
                </platformTest>
            </ruleList>
        </deleteFile>
        <findFile>
            <baseDirectory>${build_project_directory}/../temp</baseDirectory>
            <pattern>autoupdate*</pattern>
            <variable>TEMP_AUTOUPDATE_EXE</variable>
        </findFile>
        <deleteFile>
            <path>${TEMP_AUTOUPDATE_EXE}</path>
        </deleteFile>
        <deleteFile>
            <path>${build_project_directory}/../temp/update.ini</path>
        </deleteFile>
    </postBuildActionList>
    <postInstallationActionList>
        <addDirectoryToPath>
            <insertAt>end</insertAt>
            <path>${installdir}</path>
        </addDirectoryToPath>
        <writeFile>
            <path>${installdir}/addmaidsafeuser.sh</path>
            <text>#!/bin/bash
if  grep -v maidsafe /etc/passwd ; then /usr/sbin/adduser --system --shell /bin/false --no-create-home maidsafe; fi ;  if [ -e /var/cache/maidsafe/ ];then   mkdir -p /var/cache/maidsafe ;  /bin/chown maidsafe.maidsafe /var/cache/maidsafe;fi
; /bin/chmod 755 /etc/init.d/vault</text>
            <ruleList>
                <platformTest>
                    <type>linux</type>
                </platformTest>
            </ruleList>
        </writeFile>
        <changePermissions>
            <files>${installdir}/addmaidsafeuser.sh</files>
            <permissions>+x</permissions>
            <ruleList>
                <platformTest>
                    <type>linux</type>
                </platformTest>
            </ruleList>
        </changePermissions>
        <runConsoleProgram>
            <program>${installdir}/addmaidsafeuser.sh</program>
            <programArguments></programArguments>
            <ruleList>
                <platformTest>
                    <type>linux</type>
                </platformTest>
            </ruleList>
        </runConsoleProgram>
        <iniFileSet>
            <file>${installdir}/update.ini</file>
            <key>update_download_location</key>
            <section>Update</section>
            <value>${system_temp_directory}/maidsafe_pdlightlocal_updates</value>
        </iniFileSet>
    </postInstallationActionList>
    <preUninstallationActionList>
        <showQuestion>
            <default>yes</default>
            <explanation>Do you wish to remove the main database which simulates the maidsafe network? If you choose "yes", all accounts created and correspondnig backed-up copies will be deleted.  Original data outside of the pdlightlocal folders will be unaffected.  If in doubt, choose "yes".</explanation>
            <text>Do you want to remove main database?</text>
            <variable>DELETE_LOCALSTOREMANAGER</variable>
        </showQuestion>
        <renameFile>
            <destination>${system_temp_directory}/xmaidsafe_LocalStoreManager</destination>
            <origin>${system_temp_directory}/maidsafe_LocalStoreManager</origin>
            <ruleList>
                <isFalse>
                    <value>${DELETE_LOCALSTOREMANAGER}</value>
                </isFalse>
            </ruleList>
        </renameFile>
        <while>
            <explanation>Removing temp files</explanation>
            <actionList>
                <findFile>
                    <abortOnError>0</abortOnError>
                    <baseDirectory>${system_temp_directory}</baseDirectory>
                    <pattern>maidsafe_*</pattern>
                    <variable>TEMP_SUBDIR</variable>
                </findFile>
                <deleteFile>
                    <abortOnError>0</abortOnError>
                    <path>${TEMP_SUBDIR}/*</path>
                </deleteFile>
                <deleteFile>
                    <abortOnError>0</abortOnError>
                    <path>${TEMP_SUBDIR}</path>
                </deleteFile>
            </actionList>
            <conditionRuleList>
                <fileExists>
                    <path>${system_temp_directory}/maidsafe_*</path>
                </fileExists>
            </conditionRuleList>
        </while>
        <renameFile>
            <destination>${system_temp_directory}/maidsafe_LocalStoreManager</destination>
            <origin>${system_temp_directory}/xmaidsafe_LocalStoreManager</origin>
            <ruleList>
                <isFalse>
                    <value>${DELETE_LOCALSTOREMANAGER}</value>
                </isFalse>
            </ruleList>
        </renameFile>
    </preUninstallationActionList>
    <postUninstallationActionList>
        <removeDirectoryFromPath>
            <abortOnError>0</abortOnError>
            <path>${installdir}</path>
        </removeDirectoryFromPath>
        <deleteFile>
            <abortOnError>0</abortOnError>
            <path>${env(HOMEPATH)}/.maidsafe*</path>
            <showMessageOnError>0</showMessageOnError>
            <ruleList>
                <platformTest>
                    <type>windows</type>
                </platformTest>
            </ruleList>
        </deleteFile>
        <deleteFile>
            <abortOnError>0</abortOnError>
            <path>/var/cache/maidsafe</path>
            <showMessageOnError>0</showMessageOnError>
            <ruleList>
                <platformTest>
                    <type>linux</type>
                </platformTest>
            </ruleList>
        </deleteFile>
        <deleteFile>
            <abortOnError>0</abortOnError>
            <path>/Library/maidsafe</path>
            <showMessageOnError>0</showMessageOnError>
            <ruleList>
                <platformTest>
                    <type>osx</type>
                </platformTest>
            </ruleList>
        </deleteFile>
        <deleteFile>
            <abortOnError>0</abortOnError>
            <path>${installdir}/*</path>
        </deleteFile>
        <deleteFile>
            <customErrorMessage>Can't delete ${installdir}</customErrorMessage>
            <path>${installdir}</path>
        </deleteFile>
    </postUninstallationActionList>
    <description>Serverless cloud file storage</description>
    <enableRollback>1</enableRollback>
    <enableTimestamp>1</enableTimestamp>
    <installationLogFile>${system_temp_directory}/pdlightlocal_install.log</installationLogFile>
    <nativePackageName>maidsafePD</nativePackageName>
    <outputDirectory>${build_project_directory}/../temp</outputDirectory>
    <productDisplayIcon>${build_project_directory}/../images/maidsafe_logo1.ico</productDisplayIcon>
    <productUrlInfoAbout>www.maidsafe.net</productUrlInfoAbout>
    <registerWithPackageDatabase>1</registerWithPackageDatabase>
    <release>1</release>
    <removeLogFile>1</removeLogFile>
    <requireInstallationByRootUser>1</requireInstallationByRootUser>
    <saveRelativePaths>1</saveRelativePaths>
    <startMenuGroupName>maidsafe</startMenuGroupName>
    <summary>Serverless cloud file storage</summary>
    <uninstallationLogFile>${system_temp_directory}/pdlightlocal_uninstall.log</uninstallationLogFile>
    <vendor>maidsafe.net</vendor>
    <windowsExecutableIcon>${build_project_directory}/../images/maidsafe_logo1.ico</windowsExecutableIcon>
    <windowsResourceFileVersion>0.0.005</windowsResourceFileVersion>
    <windowsUninstallerExecutableIcon>${build_project_directory}/../images/maidsafe_logo_cross_not_ok.ico</windowsUninstallerExecutableIcon>
    <componentList>
        <component>
  <!-- client -->
  <name>client</name>
            <description>Client</description>
            <canBeEdited>1</canBeEdited>
            <detailedDescription>Perpetual Data Light Local allows you to upload, retrieve and share your files locally only.</detailedDescription>
            <selected>1</selected>
            <show>1</show>
            <desktopShortcutList>
                <shortcut>
                    <comment>Perpetual Data Light Local</comment>
                    <exec>${installdir}/pdlightlocal</exec>
                    <icon></icon>
                    <name>PDLightLocal</name>
                    <path></path>
                    <platforms>all</platforms>
                    <runInTerminal>0</runInTerminal>
                    <windowsExec>${installdir}/pdlightlocal</windowsExec>
                    <windowsExecArgs></windowsExecArgs>
                    <windowsIcon>${installdir}/maidsafe_logo1.ico</windowsIcon>
                    <windowsPath></windowsPath>
                </shortcut>
            </desktopShortcutList>
            <folderList>
                <folder>
                    <description>Program Files</description>
                    <destination>${installdir}</destination>
                    <name>programfiles</name>
                    <platforms>all</platforms>
                    <shortcutList>
                        <shortcut>
                            <comment>Uninstall</comment>
                            <exec>${installdir}/${uninstallerName}</exec>
                            <icon></icon>
                            <name>Uninstall ${product_fullname}</name>
                            <path>${installdir}</path>
                            <platforms>all</platforms>
                            <runInTerminal>0</runInTerminal>
                            <windowsExec>${installdir}/${uninstallerName}.exe</windowsExec>
                            <windowsExecArgs></windowsExecArgs>
                            <windowsIcon>${installdir}/maidsafe_logo1.ico</windowsIcon>
                            <windowsPath>${installdir}</windowsPath>
                        </shortcut>
                    </shortcutList>
                </folder>
                <folder>
                    <description>Program Files</description>
                    <destination>${installdir}</destination>
                    <name>programfileslinux</name>
                    <platforms>linux</platforms>
                    <distributionFileList>
                        <distributionFile>
                            <origin>${build_project_directory}/../temp/pdlightlocal</origin>
                        </distributionFile>
                    </distributionFileList>
                </folder>
                <folder>
                    <description>Program Files</description>
                    <destination>${installdir}</destination>
                    <name>programfileswindows</name>
                    <platforms>windows</platforms>
                    <distributionFileList>
                        <distributionFile>
                            <origin>${build_project_directory}/../temp/pdlightlocal.exe</origin>
                        </distributionFile>
                        <distributionFile>
                            <origin>${build_project_directory}/../temp/QtCore4.dll</origin>
                        </distributionFile>
                        <distributionFile>
                            <origin>${build_project_directory}/../temp/QtGui4.dll</origin>
                        </distributionFile>
                        <distributionFile>
                            <origin>${build_project_directory}/../images/maidsafe_logo_cross_not_ok.ico</origin>
                        </distributionFile>
                        <distributionFile>
                            <origin>${build_project_directory}/../images/maidsafe_logo1.ico</origin>
                        </distributionFile>
                    </distributionFileList>
                </folder>
                <folder>
                    <description>Program Files</description>
                    <destination>${installdir}</destination>
                    <name>programfilesosx</name>
                    <platforms>osx</platforms>
                    <distributionFileList>
                        <distributionFile>
                            <origin>${build_project_directory}/../temp/pdlightlocal</origin>
                        </distributionFile>
                    </distributionFileList>
                </folder>
                <folder>
                    <description>usrsharepixmaps</description>
                    <destination>/usr/share/pixmaps/</destination>
                    <name>pixmaps</name>
                    <platforms>linux</platforms>
                    <distributionFileList>
                        <distributionFile>
                            <origin>${build_project_directory}/../images/maidsafe_logo.xpm</origin>
                        </distributionFile>
                    </distributionFileList>
                </folder>
                <folder>
                    <description>usrsharemenu</description>
                    <destination>/usr/share/menu/</destination>
                    <name>menu</name>
                    <platforms>linux</platforms>
                    <distributionFileList>
                        <distributionFile>
                            <origin>${build_project_directory}/../temp/pdlightlocal</origin>
                        </distributionFile>
                    </distributionFileList>
                </folder>
                <folder>
                    <description>usrshareapplications</description>
                    <destination>/usr/share/applications/</destination>
                    <name>applications</name>
                    <platforms>linux</platforms>
                    <distributionFileList>
                        <distributionFile>
                            <origin>${build_project_directory}/../other/perpetualdata.desktop</origin>
                        </distributionFile>
                        <distributionFile>
                            <origin>${build_project_directory}/../other/pdlocal.desktop</origin>
                        </distributionFile>
                        <distributionFile>
                            <origin>${build_project_directory}/../other/perpetualdatavault.desktop</origin>
                        </distributionFile>
                    </distributionFileList>
                </folder>
            </folderList>
            <startMenuShortcutList>
                <startMenuShortcut>
                    <comment>Uninstall ${product_fullname}</comment>
                    <name>Uninstall ${product_fullname}</name>
                    <runInTerminal>0</runInTerminal>
                    <windowsExec>${installdir}/${uninstallerName}.exe</windowsExec>
                    <windowsExecArgs></windowsExecArgs>
                    <windowsIcon>${installdir}/maidsafe_logo_cross_not_ok.ico</windowsIcon>
                    <windowsPath>${installdir}/</windowsPath>
                </startMenuShortcut>
                <startMenuShortcut>
                    <comment>Perpetual Data Light Local</comment>
                    <name>PDLightLocal</name>
                    <runInTerminal>0</runInTerminal>
                    <windowsExec>${installdir}/pdlightlocal</windowsExec>
                    <windowsExecArgs></windowsExecArgs>
                    <windowsIcon>${installdir}/maidsafe_logo1.ico</windowsIcon>
                    <windowsPath></windowsPath>
                </startMenuShortcut>
            </startMenuShortcutList>
        </component>
  <!-- Auto update -->
  <component>
            <name>autoupdater</name>
            <description>Auto Updater</description>
            <canBeEdited>0</canBeEdited>
            <selected>1</selected>
            <show>0</show>
            <folderList>
                <folder>
                    <description>Program Files</description>
                    <destination>${installdir}</destination>
                    <name>programfiles</name>
                    <platforms>all</platforms>
                    <distributionFileList>
                        <distributionFile>
                            <origin>${build_project_directory}/../temp/autoupdate.${platform_exec_suffix}</origin>
                        </distributionFile>
                        <distributionFile>
                            <origin>${build_project_directory}/../temp/update.ini</origin>
                        </distributionFile>
                    </distributionFileList>
                </folder>
            </folderList>
            <parameterList>
                <booleanParameter>
                    <name>AUTOUPDATE_REQUESTED</name>
                    <title>Auto Update</title>
                    <description>Do you want to allow updates to be downloaded automatically?</description>
                    <explanation>PDLightLocal can automatically search for and download updates.  If you choose to disable this, it can be enabled later in the settings page.</explanation>
                    <value>Yes</value>
                    <default>Yes</default>
                    <displayStyle>radiobuttons</displayStyle>
                </booleanParameter>
            </parameterList>
            <postInstallationActionList>
                <writeFile>
                    <path>${installdir}/chkupdate.sh</path>
                    <text>#!/bin/bash
${installdir}/autoupdate-linux.bin --mode unattended &gt; /dev/null 2&gt;&amp;1
if [ $? -eq 0 ]; then
  ${installdir}/autoupdate-linux.bin
else
  echo "Nothing to report.";
fi
                    </text>
                    <ruleList>
                        <platformTest>
                            <type>linux</type>
                        </platformTest>
                    </ruleList>
                </writeFile>
                <writeFile>
                    <path>${installdir}/chkupdate.sh</path>
                    <text>#!/bin/bash
${installdir}/autoupdate-osx.app/Contents/MacOS/osx-intel --mode unattended &gt; /dev/null 2&gt;&amp;1
if [ $? -eq 0 ]; then
  ${installdir}/autoupdate-osx.app/Contents/MacOS/osx-intel
else
  echo "Nothing to report.";
fi
                    </text>
                    <ruleList>
                        <platformTest>
                            <type>osx</type>
                        </platformTest>
                    </ruleList>
                </writeFile>
                <actionGroup>
                    <abortOnError>0</abortOnError>
                    <explanation>AutoUpdate Scheduler</explanation>
                    <actionList>
  <!-- Create an empty variable -->
  <setInstallerVariable name="crontab_content" value="">
                            <abortOnError>0</abortOnError>
                            <ruleList>
                                <platformTest>
                                    <negate>1</negate>
                                    <type>windows</type>
                                </platformTest>
                                <isTrue>
                                    <value>AUTOUPDATE_REQUESTED</value>
                                </isTrue>
                            </ruleList>
                        </setInstallerVariable>
  <!-- Store in that variable the content (if exists) of the user crontab tasks -->
  <setInstallerVariableFromScriptOutput exec="crontab" execArgs="-l" name="crontab_content">
                            <abortOnError>0</abortOnError>
                            <showMessageOnError>0</showMessageOnError>
                            <ruleList>
                                <platformTest>
                                    <negate>1</negate>
                                    <type>windows</type>
                                </platformTest>
                                <isTrue>
                                    <value>AUTOUPDATE_REQUESTED</value>
                                </isTrue>
                            </ruleList>
                        </setInstallerVariableFromScriptOutput>
  <!-- Add the tasks you want to add to this variable -->
  <setInstallerVariable name="crontab_content">
                            <abortOnError>0</abortOnError>
                            <value>"${crontab_content}
@hourly ${installdir}/chkupdate.sh"</value>
                            <ruleList>
                                <platformTest>
                                    <negate>1</negate>
                                    <type>windows</type>
                                </platformTest>
                                <isTrue>
                                    <value>AUTOUPDATE_REQUESTED</value>
                                </isTrue>
                            </ruleList>
                        </setInstallerVariable>
  <!-- Add to crontab your tasks without removing existing one -->
  <runProgram>
                            <abortOnError>0</abortOnError>
                            <program>echo</program>
                            <programArguments>${crontab_content} | crontab -</programArguments>
                            <ruleList>
                                <platformTest>
                                    <negate>1</negate>
                                    <type>windows</type>
                                </platformTest>
                                <isTrue>
                                    <value>AUTOUPDATE_REQUESTED</value>
                                </isTrue>
                            </ruleList>
                        </runProgram>
                        <changePermissions>
                            <abortOnError>0</abortOnError>
                            <files>chkupdate.sh</files>
                            <permissions>+x</permissions>
                            <ruleList>
                                <platformTest>
                                    <negate>1</negate>
                                    <type>windows</type>
                                </platformTest>
                            </ruleList>
                        </changePermissions>
                    </actionList>
                </actionGroup>
            </postInstallationActionList>
        </component>
    </componentList>
    <parameterList>
        <directoryParameter>
            <name>installdir</name>
            <description>Installer.Parameter.installdir.description</description>
            <explanation>Installer.Parameter.installdir.explanation</explanation>
            <value>${platform_install_prefix}/maidsafe/${product_shortname}-${product_version}</value>
            <default>${platform_install_prefix}/${product_shortname}-${product_version}</default>
            <allowEmptyValue>0</allowEmptyValue>
            <ask>yes</ask>
            <cliOptionName>prefix</cliOptionName>
            <mustBeWritable>1</mustBeWritable>
            <mustExist>0</mustExist>
            <width>30</width>
        </directoryParameter>
    </parameterList>
</project>
