Client Operations API
________________________

join()
//append a 0 to the Kademlia address
//this will not be cached on network or added to ANY kbucket
return string
//1=FAILED, else ID:RANK is returned 

getSupernodes()
//retrieve list of nearest supernodes (i.e. looking after this zone)
return string
/1=NO_CONNECTION, else str/512 = 0 and each str is a supernode

getRank()
//get our rank for our PMID - from vault OR supernode
//to regularly check, this is set initially at join
return int

getZone()
//return current network zone 
return int
//0=OK, 1=FAILED otherwise zone

processQueue()
//process the client queue
//queue contains unfinished jobs or cleanup tasks
//i..e save cached chunks (from SE)
//this is part of a constant running process ??
return int
//0=OK, 1=INCOMPLETE

getOurKey(str TYPE, str Pub/Priv)
//get any private or priv key for OUR ID's
return string

getPubKey(ID)
//try local cached database (from DA) 
//or get an ID from the system packet (i.e. value of ID)
return string

checkChunk(str512 chunkname)
//if signed - check sig
//otherwise check name=H(content)
return int
//0=OK, 1=INVALID_SIG, 2=CANNOT_RETRIEVE_SIGNATURE (prob same as 1) , 3=CHUNK_DIRTY 

createIOU(int size)
//create an IOU packet for a given size
//IOU is a digitally signed packet serialised
// RSASigned"IOU XMb :serial # xxx:date/time"[pmid priv]
return string

saveToNet(str512 chunkname, int size)
//findpartners(x)
//use an IOU from zone or ALERT(NON_PAYMENT_OF_IOU(str512 pmid))
//our keyring has a copy of the PMID key we can
//create and IOU and buffermessage our PMID we have done so
return bool

//buying and selling ****************************************************

buyVault(int size, str authoritynum)
//request to buy vault
//
return string
//string is PMID, priv key

buyCredit(double amount)
//amount in GDP 
return bool

sellPMID(PMID)
//pmids for sale created in vault
return bool

buyPro()
//get pro version - no advertising etc.
return int
//0=OK, 1=NOT_ENOUGH_CREDIT

updateCredit()
//updates credit counter
//used in gui 
return bool


//ALERTS ********************************************************************************

sendAlert(str alert, str recipient)
//send alert and check recieved
return int
//0=OK, 1=CANNOT_CONTACT_RECIPIENT



