Vault Operations 
________________________
vaults = ants
RULES

1: Protect Network (colony)
2: Protect Resouces (food)
3: Freely Give Resources To Anyone.
4: Protect self
________________________

join()
//Join network and update PMID key with value of given Kad address
//this extends Kademlia node join
//here we can instigate sengmntation alerting 
//i.e. drop back to udp port 7300 and find others
//otherwise our port is random as per design
return string
//1=FAILED, else ID:RANK is returned 

getSupernodes()
//retrieve list of nearest supernodes (i.e. looking after this zone)
return string
/1=NO_CONNECTION, else str/512 = 0 and each str is a supernode

getNetRank()
//get our rank from Supernode network
//to regularly check, this is set initially at join
return int

getRank()
//give our rank
return int

getZone()
//return current network zone 
return int
//0=OK, 1=FAILED otherwise zone

processQueue()
//process the vault queue
//queue contains unfinished jobs or cleanup tasks
//i..e check local chunks, validity checks etc.
//this is part of a constant running process ??
return int
//0=OK, 1=INCOMPLETE

checkLocalChunks()
//traverse local chunk db and check each chunk 
//calls checkChunk
//checks for validitychecks required
return bool

getKey()
//get PMID private key
//initially stored locally
//later we wil use differing techniques such as 
//contents of a cluster on hdd as key to decrypt and retrieve 
return string

changePMID(str ID, str privkey, str newID, str newpriv, str newpub)
//allows system to alter PMID name - but retains rank by sending signed message
//to supernodes - initially ony when PMID is empty  
return bool

checkChunk(str512 chunkname)
//if signed - check sig
//otherwise check name=H(content)
return int
//0=OK, 1=INVALID_SIG, 2=CANNOT_RETRIEVE_SIGNATURE (prob same as 1) , 3=CHUNK_DIRTY 

createIOU(int size)
//create an IOU packet for a given size
//IOU is a digitally signed packet serialised
// RSASigned"IOU XMb :serial # xxx:date/time"[pmid priv]
return string

saveFromNet(str512 chunkname, int size, str512 requester)
//We have recieved a store request and deal with it
//IF FIRST save from requestor we can ask him to save our chunk
//otherwise ONLY pass an IOU (either ours or one we pass on ) OR a newly created chunk 
return int 
//0=OK, 1=CANNOT_WRITE_FILE, FAILED_CHECK

findPartners(int number)
//find partner nodes who will store copies of a chunk
//zone rules written in here
return sting

readPMIDBuffer()
//get messages for vault
return string

saveToNet(str512 chunkname, int size)
//findpartners(x)
//use an IOU from zone or ALERT(NON_PAYMENT_OF_IOU(str512 pmid))
return bool
//we either save or don't

getVaultFreeSpace()
//give amount of free space in vault MB (1000 bytes)
return int

getMachineFreeSpace()
//give machine free space MB
return int

reduceVaultSpace(int spacetoreduce)
//reduce size of vault MB - can only reduce to filled up space 
//i.e. cannot delete chunks
return int

createVault(int size)
//create a new vault of size MB
return string
//string is 0=OK, 1=FAILED :PMID ID, pub, priv 

//ALERTS ********************************************************************************

sendAlert(str alert, str recipient)
//send alert and check recieved
return int
//0=OK, 1=CANNOT_CONTACT_RECIPIENT

Break rule 1 - quarantine (recipient = supernodes)
NON_PAYMENT_OF_IOU 
DIRTY_CHUNK

Break rule 2 - Demote (recipient = supernodes)
LOST_CHUNK
LOW_AVAILABILITY

Break rule 3 - quarantine or demote ? (recipient = supernodes or drop silently)
TO_MANY_SAVE_REQUESTS 

Break rule 4 - fix or hari kiri
SELF_DIRTY_CHUNK 

NET_SEGMENTATION - grow another network - RULE 1

BUY_SPACE - 
get an auth code for space
can get from client itself (via buffer mesages) and also 
which may be easier and we can use adsense 

SELL_SPACE - 
buffer message to maidsafe public name  
RSASign(RSAenc[maid pub](PMID ID,SPACE))PMID priv

//Supernode specific ********************************************************************

//***************************
//*thoughts: every node joining net or zone needs a sig
//*before adding node to kbucket - check its sig
//*stops sybil AND spartcus (I am sparticus) attacks 
//***************************

checkNodeSig(str512 nodeid)
//for all nodes joining it's zone the R0 checks 
//nodes PMID:KAD credentials
//i.e. as node come in at KID it must have signed the 
//PMID:KAD entry - the R0 checks the sig and ignore fakes
//this helps against sybil attack  
//any node entering zone without this is quarantined
return bool

quarantineNode(str512 nodeid)
//???need to work out best way to do this THURS NIGHT 
//ban kad id or ip:port (better) ?
//or ban PMID (which is the sig) 
return bool 

