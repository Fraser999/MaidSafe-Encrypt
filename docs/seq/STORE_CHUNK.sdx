<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram>
<source><![CDATA[#![maidsafe store chunk]
/WatchList:vault
Client:Object
/StoreManager:Object
Vault:vault
/RefHolder:vault
/RankHolder:vault



Client:Client.Does chunk exist on network

Client:>StoreManager.new(Store Chunk)

[c: If chunk does not exist on network, loop till saved]

StoreManager:StoreManager.Wait till on line is ok
*1 StoreManager
List all nodes by rank, then RTT, 
select nodes ranked sames or less and 
4 nodes at distances closest to 0,33,66,100%.
*1
StoreManager:IOU Auth {SIZE|CLIENT_PMID|[signed with vault PMID]}=Vault.STORE REQUEST [PMID:CHUNKNAME:SIZE]
Vault:Vault.check clients pmid rank ok

[c: Loop for K nodes]
StoreManager:RefHolder.new( STORE_IOU    {IOU Auth|[signed with client PMID]})
RefHolder: store iou in queue
[/c]
StoreManager:Vault. STORE CHUNK [PMID]

#Add reference 
[c: Loop for K nodes]
Vault:IOU Transfer=RefHolder.Add Ref (chunkname & PMID))
RefHolder:  retrieve iou from queue
RefHolder:  add reference
[/c]

[c: Loop for K nodes]
Vault:ACK/NACK=RankHolder.new(INC RANK, auth=[Reciept:CHUNKNAME]
RankHolder:ACK/NACK=RefHolder. Delete IOU) 
[/c]
[/c]
*2StoreManager
After wating for the max RPC timeouts (plus any off line time) 
for the vault to add a reference StoreManager will confirm 
the reference packet is saved Otherwise this will repeat, forever.
*2
StoreManager:destroy()

[c: Loop for K nodes]
#RefHolder:Vault.ACK NACK
Client:WatchList.new(Add me to list)

*3WatchList
The authorisation for watchlist is an IOU with maidsafe as the 
PMID who can reclaim space. In case of watchilst cration it's 
a copy of the IOU used as payment of storing the chunk.
*3

[/c]

Client: Mark datamap chunk stored]]></source>
<configuration>
<property name="actorWidth" value="25"/>
<property name="arrowSize" value="6"/>
<property name="colorizeThreads" value="true"/>
<property name="destructorWidth" value="30"/>
<property family="Dialog" name="font" size="12" style="0"/>
<property name="fragmentMargin" value="8"/>
<property name="fragmentPadding" value="10"/>
<property name="fragmentTextPadding" value="3"/>
<property name="glue" value="10"/>
<property name="headHeight" value="35"/>
<property name="headLabelPadding" value="5"/>
<property name="headWidth" value="100"/>
<property name="initialSpace" value="10"/>
<property name="leftMargin" value="5"/>
<property name="lineWrap" value="true"/>
<property name="lowerMargin" value="5"/>
<property name="mainLifelineWidth" value="8"/>
<property name="messageLabelSpace" value="3"/>
<property name="messagePadding" value="6"/>
<property name="noteMargin" value="6"/>
<property name="notePadding" value="6"/>
<property name="opaqueMessageText" value="false"/>
<property name="returnArrowVisible" value="true"/>
<property name="rightMargin" value="5"/>
<property name="selfMessageHorizontalSpace" value="15"/>
<property name="separatorBottomMargin" value="8"/>
<property name="separatorTopMargin" value="15"/>
<property name="spaceBeforeActivation" value="2"/>
<property name="spaceBeforeAnswerToSelf" value="10"/>
<property name="spaceBeforeConstruction" value="6"/>
<property name="spaceBeforeSelfMessage" value="7"/>
<property name="subLifelineWidth" value="6"/>
<property name="threadNumbersVisible" value="false"/>
<property name="threaded" value="true"/>
<property name="upperMargin" value="5"/>
<property name="verticallySplit" value="false"/>
</configuration>
</diagram>
