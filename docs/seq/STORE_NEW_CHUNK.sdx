<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram>
<source><![CDATA[#![Store New Chunk   ]
client:client "First Client"
peer:vault "Peer Vault"
info:vault "Chunk Info Holders x16"
c_account:vault "Client Account Holders x16"
v_account:vault "Vault Account Holders x16"

+1 info
Watch List comprises:
  * list of PMIDs of current 4 paying clients
  * further list of reserve watchers
  * count of total watchers
  * checksum of current watchers
  * chunk size
  * minimum rank required of chunk holders.
+1

client:client. Check we have enough space in our account&

client:Nack =info. Kademlia FIND_VALUE &

*2 client
For each Chunk Info Holder...
*2

client:>info. ADD_TO_WATCH_LIST_REQUEST
info:info. Validate request.&
(3)info:>c_account. AMEND_ACCOUNT_REQUEST (Space Taken Inc)
info:info. Prepare to create new Watch List.&
info:>client.Ack (Store x copies) / Nack &

[c:Loop Loop until x copies uploaded   ]

*3 info
As this is the first time the chunk has
been stored, client must pay 4x for it.
So this message requests 4x original
space be deducted from client's account.
*3

*4 c_account
Check 16 requests are from
valid Chunk Info Holders by
doing a Kademlia FIND_NODES
and checking sender is in
list of near nodes to value.
*4

client:client. Wait till online.&

*5 client
Select peer vault - use rank, stated
space available and RTT to decide.
*5

client:Ack/Nack in Signed Contract =peer. STORE_PREP_REQUEST&

*6 client
Validate signed response & signed contract.  If Nack or failed validation,
send signed Nack with contract to Peer Vault Account Holders & restart store loop.
*6

client:>peer. STORE_CHUNK_REQUEST
peer:>client.Ack/Nack &

peer:>info. ADD_TO_REFERENCE_LIST_REQUEST
(4)c_account:>info. Ack/Nack
info:info. Finalise creation of new Watch List.&
info:>peer. Ack/Nack &

info:>v_account. AMEND_ACCOUNT_REQUEST (Space Given Inc)
(4)v_account:>info.Ack/Nack &
[/c]]]></source>
<configuration>
<property name="actorWidth" value="25"/>
<property name="arrowSize" value="6"/>
<property name="colorizeThreads" value="true"/>
<property name="destructorWidth" value="30"/>
<property family="Dialog" name="font" size="12" style="0"/>
<property name="fragmentMargin" value="8"/>
<property name="fragmentPadding" value="10"/>
<property name="fragmentTextPadding" value="3"/>
<property name="glue" value="0"/>
<property name="headHeight" value="35"/>
<property name="headLabelPadding" value="5"/>
<property name="headWidth" value="100"/>
<property name="initialSpace" value="10"/>
<property name="leftMargin" value="5"/>
<property name="lineWrap" value="true"/>
<property name="lowerMargin" value="5"/>
<property name="mainLifelineWidth" value="8"/>
<property name="messageLabelSpace" value="3"/>
<property name="messagePadding" value="6"/>
<property name="noteMargin" value="6"/>
<property name="notePadding" value="6"/>
<property name="opaqueMessageText" value="false"/>
<property name="returnArrowVisible" value="true"/>
<property name="rightMargin" value="5"/>
<property name="selfMessageHorizontalSpace" value="15"/>
<property name="separatorBottomMargin" value="8"/>
<property name="separatorTopMargin" value="15"/>
<property name="spaceBeforeActivation" value="2"/>
<property name="spaceBeforeAnswerToSelf" value="10"/>
<property name="spaceBeforeConstruction" value="6"/>
<property name="spaceBeforeSelfMessage" value="7"/>
<property name="subLifelineWidth" value="6"/>
<property name="threadNumbersVisible" value="false"/>
<property name="threaded" value="true"/>
<property name="upperMargin" value="5"/>
<property name="verticallySplit" value="false"/>
</configuration>
</diagram>
