#LyX 1.6.7 created this file. For more info see http://www.lyx.org/
\lyxformat 345
\begin_document
\begin_header
\textclass IEEEtran
\use_default_options false
\language british
\inputencoding default
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\paperfontsize default
\spacing single
\use_hyperref true
\pdf_title "Self-Authentication"
\pdf_author "David Irvine"
\pdf_subject "Authentication"
\pdf_keywords "security, freedom, privacy, authentication"
\pdf_bookmarks true
\pdf_bookmarksnumbered false
\pdf_bookmarksopen false
\pdf_bookmarksopenlevel 1
\pdf_breaklinks false
\pdf_pdfborder true
\pdf_colorlinks false
\pdf_backref false
\pdf_pdfusetitle true
\papersize default
\use_geometry false
\use_amsmath 0
\use_esint 0
\cite_engine basic
\use_bibtopic false
\paperorientation portrait
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\defskip medskip
\quotes_language english
\papercolumns 2
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\author "" 
\author "" 
\end_header

\begin_body

\begin_layout Title
Self-Authentication
\end_layout

\begin_layout Author
David Irvine, email: david.irvine@maidsafe.net, LifeStuff: David
\end_layout

\begin_layout Right Address
maidsafe.net limited (registered in Scotland Sc 297540)
\end_layout

\begin_layout Date
September, 2010
\end_layout

\begin_layout Abstract
Today all known mechanisms that grant access to distributed or shared services
 and resources require central authoritative control in some form, raising
 issues in regard to security, trust and privacy.
 This paper presents a system of authentication that not only abolishes
 the requirements for any centrally stored user credential records, it also
 negates the necessity for any server based systems as a login entity for
 users to connect with prior to gaining access to a system.
\end_layout

\begin_layout Keywords
security, freedom, privacy, authentication 
\end_layout

\begin_layout MarkBoth
maidsafe.net limited company confidential Version 0.2
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
0.2 remove the PIN requirement
\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

}{
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Section
Introduction
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
PARstart{A}{uthentication}
\end_layout

\end_inset

 allows access to a system at a certain level or privilege.
 This is generally accepted as the privilege as granted by an authoritative
 3rd party who owns or manages the particular service or resource being
 accessed.
 In cloud-computing or personal computing this is a limiting factor and
 a significant security risk.
 Trust in 3rd parties with personal or confidential data is something that
 is arguably impossible without any radical change in the very structure
 and fabric of modern society.
 This paper presents a system where there is no requirement for such a 3rd-party
 involvement.
 
\end_layout

\begin_layout Standard
A significant shift in thinking nowadays is to spread data across multiple
 locations for security and ease of access.
 This has surfaced privacy concerns, and increased awareness of ownership
 of data, something that is often disregarded very easily.
 But rarely all personal data is surrendered in this way; many systems offer
 some level of encryption to ensure privacy of data, but none offer any
 system of personal access to personal data, privately.
 In almost every case there is some form of contract, whether implied or
 actual between the 3rd-party service provider and the client.
 Furthermore the supplier may independently decide or be forced to act on
 the data, whether deleting encrypted data, going out of business or becoming
 a victim of damage or theft.
 
\end_layout

\begin_layout Standard
This situation is a crucial impediment to personal freedom, and without
 a change in technical capabilities that allow the mindset change that appears
 more prevalent as time goes by, there will be a significant gulf between
 people's individual desires and technology's ability to deliver.
 This in itself may impede progress and innovation, which would be an enormous
 failure of Science and Engineering to take responsibility for.
 
\end_layout

\begin_layout Standard
This paper will outline and detail a significant mind-shift in access controls
 that not only answer these issues, but take the current situation and dramatica
lly alter our relationship with technology, particularly in regard to storing,
 sharing and developing our most personal thoughts, aspirations and desires.
\end_layout

\begin_layout Section
Implementation
\end_layout

\begin_layout Subsection
Issues to be solved
\end_layout

\begin_layout Standard
Given a traditional resource exchange, the bargain between involved parties
 tends to be direct and physically local.
 However, the de-facto replacement of barter by monetary systems in modern
 societies introduced the requirement of trust in third parties providing
 and controlling the necessary infrastructure, such as banks and financial
 authorities.
\end_layout

\begin_layout Standard
It is an illogical consideration to have created a technology based solution
 which requires this demand of trust, and to do so in a manner that is almost
 uncontrolled.
 Technology tends to be based on logic, thus it would appear obvious that
 creating, sharing and retrieving information fed into a computing device
 by a person should not require that computer to connect to a network of
 computers with a controller or guardian that is not a system of pure logic.
\end_layout

\begin_layout Standard
A significant reason for the current situation is the inability for identities
 to be created, managed and personally controlled.
 This is a reasonable request from people to make from their technology,
 but so far has been regarded as impossible by technology professionals.
 A system of personal identity management is fundamental for the removal
 of the illogical situation of today.
 
\end_layout

\begin_layout Subsection
Conventions
\end_layout

\begin_layout Standard
There is scope for confusion when using the term 
\begin_inset Quotes eld
\end_inset

key
\begin_inset Quotes erd
\end_inset

, as sometimes it refers to a cryptographic key, and at other times it is
 in respect to the key of a DHT 
\begin_inset Quotes eld
\end_inset

key, value
\begin_inset Quotes erd
\end_inset

 pair.
 In order to avoid confusion, cryptographic keys will be referred to as
 
\begin_inset Formula $\mathsf{K}$
\end_inset

, and DHT keys simply as keys.
\end_layout

\begin_layout Itemize
\begin_inset Formula $\mathsf{H}$
\end_inset

 ≡ Hash function such as SHA, MD5, etc.
 
\end_layout

\begin_layout Itemize
\begin_inset Formula $\mathsf{PBKDF2_{[Passphrase][Salt]}}$
\end_inset

 ≡ Password-Based Key Derivation Function or similar
\end_layout

\begin_layout Itemize
\begin_inset Formula $\mathsf{SymEnc_{[K]}(Data)}$
\end_inset

 ≡ Symmetrically encrypt 
\begin_inset Formula $\mathsf{Data}$
\end_inset

 using 
\begin_inset Formula $\mathsf{K}$
\end_inset

 
\end_layout

\begin_layout Itemize
\begin_inset Formula $\mathsf{SymDec_{[K]}(Data)}$
\end_inset

 ≡ Symmetrically decrypt 
\begin_inset Formula $\mathsf{Data}$
\end_inset

 using 
\begin_inset Formula $\mathsf{K}$
\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Formula $\mathsf{+}$
\end_inset

 ≡ Concatenation
\end_layout

\begin_layout Itemize
\begin_inset Formula $\mathsf{PutV_{[Key]}(Value)}$
\end_inset

 ≡ Store a 
\begin_inset Formula $\mathsf{Value}$
\end_inset

 under the given 
\begin_inset Formula $\mathsf{Key}$
\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Formula $\mathsf{GetV_{[Key]}}$
\end_inset

 ≡ Retrieve the 
\begin_inset Formula $\mathsf{Value}$
\end_inset

 identified by 
\begin_inset Formula $\mathsf{Key}$
\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Formula $\mathsf{DelV_{[Key]}}$
\end_inset

 ≡ Delete the 
\begin_inset Formula $\mathsf{Value}$
\end_inset

 identified by 
\begin_inset Formula $\mathsf{Key}$
\end_inset


\end_layout

\begin_layout Subsection
Overview of self-authentication
\end_layout

\begin_layout Subsubsection
Requirements
\end_layout

\begin_layout Standard
Self-authentication requires a storage mechanism accessible by the users
 of the system.
 This may be public (such as a peer-to-peer network) or private (such a
 a storage area network); this paper assumes that it should also be a key
 addressable storage system.
\end_layout

\begin_layout Subsubsection
Methodology 
\end_layout

\begin_layout Standard
Self-authentication relies on a system where an entity can create a unique
 key to store a value in the storage system.
 The value stored with this key should contain an encrypted passport to
 data.
 This passport may be cryptographically secure keys and or a list of other
 keys to make use of the information to be stored and or shared as well
 as any additional components required.
\end_layout

\begin_layout Standard
The location of this initial key should be masked or at least not obvious
 in the storage mechanism.
 Further masking should be considered.
 This simplified approach is the basis for self authentication and is extended
 into a system that is capable of security in a manner that allows access
 data to be stored publically and with no additional requirement such as
 firewalls or access controls.
 
\end_layout

\begin_layout Section
Detailed implementation
\end_layout

\begin_layout Subsection
Creation of an account
\end_layout

\begin_layout Standard
Here we will assume there are two inputs from the user of the system: user-name
 
\begin_inset Formula $\mathsf{U}$
\end_inset

, password 
\begin_inset Formula $\mathsf{W}$
\end_inset

.
 A salt 
\begin_inset Formula $\mathsf{S}$
\end_inset

 is calculated by hashing the U and W (twice) and then reading the result
 and generate a number between 1000 and 5000 e.g.
 
\begin_inset Formula $ReadHash()$
\end_inset

 reads a bit from the hash 
\begin_inset Formula $H(H(U+W))=P\qquad X=ReadHash(P)\; While(X\%4000\leq0)\{X;\}\; X+1000=S$
\end_inset

.
 
\end_layout

\begin_layout Standard
To generate a unique identifier, we hash the concatenation of the user-name
 and the salt, 
\begin_inset Formula $\mathsf{H(U+S)}$
\end_inset

.
 
\end_layout

\begin_layout Standard
PBKDF2 is used here to strengthen any password keys used.
 This is required as user selected passwords are inevitably weak and the
 user may not know the user-name is also used as a password in the system.
 
\begin_inset Formula $\mathsf{Account}$
\end_inset

 specifies session data, like user details or an index of references to
 further data.
 This packet is located through an Access Packet holding a random number
 
\begin_inset Formula $\mathsf{Rnd\#}$
\end_inset

.
\end_layout

\begin_layout Enumerate
\begin_inset Formula $\mathsf{GetV_{[H(U+S)]}\equiv False}$
\end_inset

 (Ensure uniqueness)
\end_layout

\begin_layout Enumerate
Generate random number 
\begin_inset Formula $\mathsf{Rnd\#}$
\end_inset


\end_layout

\begin_layout Enumerate
\begin_inset Formula $\mathsf{PutV_{[H(U+S)]}\left(SymEnc_{[PBKDF2_{[U][S]}]}(Rnd\#)\right)}$
\end_inset

 (Store Access Packet)
\end_layout

\begin_layout Enumerate
\begin_inset Formula $\mathsf{PutV_{[H(U+S+Rnd\#)]}\left(SymEnc_{[PBKDF2_{[W][S]}]}(Account)\right)}$
\end_inset

 (Store Account Packet)
\end_layout

\begin_layout Subsection
Login / load session process
\begin_inset CommandInset label
LatexCommand label
name "sub:Login-to-a"

\end_inset


\end_layout

\begin_layout Enumerate
\begin_inset Formula $\mathsf{SymDec_{[PBKDF2_{[U][S]}]}\left(GetV_{[H(U+S)]}\right)\equiv Rnd\#}$
\end_inset


\end_layout

\begin_layout Enumerate
\begin_inset Formula $\mathsf{SymDec_{[PBKDF2_{[W][S]}]}(GetV_{[H(U+S+Rnd\#)]})\equiv Account}$
\end_inset


\end_layout

\begin_layout Standard
For the following operation, 
\begin_inset Formula $\mathsf{Rnd\#}$
\end_inset

 should be kept locally for the duration of the session.
\end_layout

\begin_layout Subsection
Logout / save session process
\end_layout

\begin_layout Enumerate
Generate new random number 
\begin_inset Formula $\mathsf{Rnd\#_{new}}$
\end_inset


\end_layout

\begin_layout Enumerate
\begin_inset Formula $\mathsf{PutV_{[H(U+S+Rnd\#_{new})]}\left(SymEnc_{[PBKDF2_{[W][S]}]}(Account)\right)}$
\end_inset

 (Store new Account Packet)
\end_layout

\begin_layout Enumerate
\begin_inset Formula $\mathsf{PutV_{[H(U+S)]}\left(SymEnc_{[PBKDF2_{[U][S]}]}(Rnd\#_{new})\right)}$
\end_inset

 (Update Access Packet)
\end_layout

\begin_layout Enumerate
\begin_inset Formula $\mathsf{DelV_{[H(U+S+Rnd\#)]}}$
\end_inset

 (Delete old Account Packet)
\end_layout

\begin_layout Subsection
Fallback Account Packets
\end_layout

\begin_layout Standard
The previous sections outlined the basic system of authentication.
 However, this can be extended for safety reasons.
 As with any system, the serialisation and store operation of the account
 data can fail for any reason, resulting in unreadable data upon retrieval.
 This would be catastrophic as access to the user's data on the system may
 be rendered impossible.
 To reduce any such risk, a fallback copy of an Account Packet (and its
 Access Packet) is kept, to allow reverting to the previous version in case
 the current version can't be restored or turns out to have been generated
 erroneously.
\end_layout

\begin_layout Subsubsection
Updated account creation process
\end_layout

\begin_layout Enumerate
\begin_inset Formula $\mathsf{GetV_{[H(U+S)]}\equiv False}$
\end_inset

 (Ensure uniqueness of Access Packet)
\end_layout

\begin_layout Enumerate
\begin_inset Formula $\mathsf{GetV_{[H(U+(S-1))]}\equiv False}$
\end_inset

 (Ensure uniqueness of Fallback Access Packet)
\end_layout

\begin_layout Enumerate
Generate random number 
\begin_inset Formula $\mathsf{Rnd\#}$
\end_inset

 and copy 
\begin_inset Formula $\mathsf{Rnd\#\rightarrow Rnd\#_{fallback}}$
\end_inset


\end_layout

\begin_layout Enumerate
\begin_inset Formula $\mathsf{PutV_{[H(U+S)]}\left(SymEnc_{[PBKDF2_{[U][S]}]}(Rnd\#)\right)}$
\end_inset


\end_layout

\begin_layout Enumerate
\begin_inset Formula $\mathsf{PutV_{[H(U+(S-1)]}\left(SymEnc_{[PBKDF2_{[U][S-1]}]}(Rnd\#)\right)}$
\end_inset


\end_layout

\begin_layout Enumerate
\begin_inset Formula $\mathsf{PutV_{[H(U+S+Rnd\#)]}\left(SymEnc_{[PBKDF2_{[W][S]}]}(Account)\right)}$
\end_inset


\end_layout

\begin_layout Standard
In this case, the random numbers in the Access Packets are the same, thus
 point to the same (unique) Account Packet.
 Fallback packets are only kept once the Account Packet is updated.
\end_layout

\begin_layout Subsubsection
Updated Login process
\end_layout

\begin_layout Enumerate
if (
\begin_inset Formula $\mathsf{GetV_{[H(U+S)]}\equiv EncRnd\#}$
\end_inset

)
\end_layout

\begin_deeper
\begin_layout Enumerate
\begin_inset Formula $\mathsf{SymDec_{[PBKDF2_{[U][S]}]}(EncRnd\#)\equiv Rnd\#}$
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
else (or if previous attempt failed)
\end_layout

\begin_deeper
\begin_layout Enumerate
\begin_inset Formula $\mathsf{SymDec_{[PBKDF2_{[U][S-1]}]}\left(GetV_{[H(U+(S-1))]}\right)\equiv Rnd\#}$
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
\begin_inset Formula $\mathsf{SymDec_{[PBKDF2_{[W][S]}]}\left(GetV_{[H(U+S+Rnd\#)]}\right)\equiv Account}$
\end_inset


\end_layout

\begin_layout Subsubsection
Logout / save session process
\end_layout

\begin_layout Enumerate
Generate new random number 
\begin_inset Formula $\mathsf{Rnd\#_{new}}$
\end_inset


\end_layout

\begin_layout Enumerate
\begin_inset Formula $\mathsf{PutV_{[H(U+S+Rnd\#_{new})]}\left(SymEnc_{[PBKDF2_{[W][S]}]}(Account)\right)}$
\end_inset


\end_layout

\begin_layout Enumerate
\begin_inset Formula $\mathsf{PutV_{[H(U+(S-1)]}\left(SymEnc_{[PBKDF2_{[U][S]}]}(Rnd\#)\right)}$
\end_inset


\end_layout

\begin_layout Enumerate
\begin_inset Formula $\mathsf{PutV_{[H(U+S)]}\left(SymEnc_{[PBKDF2_{[U][S-1]}]}(Rnd\#_{new})\right)}$
\end_inset


\end_layout

\begin_layout Enumerate
\begin_inset Formula $\mathsf{DelV_{[H(U+S+Rnd\#_{fallback})]}}$
\end_inset


\end_layout

\begin_layout Enumerate
\begin_inset Formula $\mathsf{Rnd\#\rightarrow Rnd\#_{fallback}}$
\end_inset


\end_layout

\begin_layout Enumerate
\begin_inset Formula $\mathsf{Rnd\#_{new}\rightarrow Rnd\#}$
\end_inset


\end_layout

\begin_layout Standard
The previous Account Packet remains untouched, instead the Fallback Access
 Packet is redirected to it and the normal Access Packet points to the new
 Account Packet.
 The previous Fallback Account Packet is deleted.
 This is a security measure to hinder slow brute-force attacks on decrypting
 the Access Packet, which by the time the clear-text random number is obtained
 would make it obsolete.
\end_layout

\begin_layout Subsection
Further enhancements
\end_layout

\begin_layout Subsubsection
Time based obfuscation
\end_layout

\begin_layout Standard
In the previous sections a system of self authentication was detailed which
 is very effective.
 A potential failure point, however, may be the Access Packets, as those
 are never altering their location (key) and can pose a target for any attacker
 who is monitoring data traffic between the user and the system.
\end_layout

\begin_layout Standard
To remove this weakness, a predictably altering piece of data can be introduced,
 such as time (e.g.
 week number, day of year or similar).
 In this case in 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Login-to-a"

\end_inset

 the 
\begin_inset Formula $\mathsf{GetV}$
\end_inset

 call would be iterative, starting at the current time slot and decrementing
 until it returns with a value.
 Access Packets at 
\begin_inset Quotes eld
\end_inset

outdated
\begin_inset Quotes erd
\end_inset

 locations would be deleted on detection, and updates always stored in the
 current location, resulting in regularly 
\begin_inset Quotes eld
\end_inset

moving
\begin_inset Quotes erd
\end_inset

 packets.
\end_layout

\begin_layout Subsubsection
Distributed storage system
\end_layout

\begin_layout Standard
This system can be enhanced with the introduction of a distributed storage
 network as described in 
\begin_inset CommandInset citation
LatexCommand cite
key "4"

\end_inset

.
 This has many advantages including the ability to mask any account data
 in a large address space and protect with cryptographically secure privileges
 that can prevent unauthorised deletion or any loss of data packets.
 
\end_layout

\begin_layout Section
Conclusions
\end_layout

\begin_layout Standard
The system presented is one version of a server-less authentication system.
 There is a strong case for this to enable true cloud based services with
 users being in control of their own data and access privileges.
 Such a system can be applied in a multitude of situations and may be particular
ly useful with paid services, which would not require the customer to divulge
 any personal information or create yet another identity specifically for
 a single service, providing a shared infrastructure exists.
\end_layout

\begin_layout Standard
We demonstrated a working version of such a system for the first time in
 April 2008 in our offices in Troon, Scotland, and as far as we are aware
 this was the first time in history a person created their own identity,
 stored it and managed all their actions without any server requirement
 and without any 3rd party control.
 
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
label "1"
key "1"

\end_inset

as described by Van Jacobson in this link below, August 30, 2006 http://video.Goo
gle.com/videoplay?docid=-6972678839686672840
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
label "2"
key "2"

\end_inset

David Irvine, Self Encrypting Data, david.irvine@maidsafe.net
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
label "3"
key "3"

\end_inset

David Irvine, "Peer to Peer" Public Key Infrastructure, david.irvine@maidsafe.net
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
label "4"
key "4"

\end_inset

David Irvine, maidsafe: A new networking paradigm, david.irvine@maidsafe.net
\end_layout

\begin_layout Standard
\begin_inset Note Comment
status collapsed

\begin_layout Plain Layout
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
Change this paragraphs style to 'Standard' to enable
\end_layout

\begin_layout Plain Layout
BibTeX bibliography generation.
\end_layout

\begin_layout Plain Layout
Remember though that your final submission is supposed to have
\end_layout

\begin_layout Plain Layout
all the bibliography entries embedded in the latex file.
 This means
\end_layout

\begin_layout Plain Layout
you eventually have to copy the .bbl file into the latex file and
\end_layout

\begin_layout Plain Layout
remove the bibtex lines.
\end_layout

\end_inset


\begin_inset CommandInset bibtex
LatexCommand bibtex
bibfiles "your_biblio_file"
options "IEEEbib"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout BiographyNoPhoto
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

David Irvine
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

  is a Scottish Engineer and innovator who has spent the last 12 years researchi
ng ways to make computers function in a more efficient manner.
\end_layout

\begin_layout BiographyNoPhoto
He is an Inventor listed on more than 20 patent submissions and was Designer
 / Project Manager of one of the World's largest private networks (Saudi
 Aramco, over $300M).
 He is an experienced Project Manager and has been involved in start up
 businesses since 1995 and has provided business consultancy to corporates
 and SMEs in many sectors.
\end_layout

\begin_layout BiographyNoPhoto
He has presented technology at Google (Seattle), British Computer Society
 (Christmas Lecture) and many others.
\end_layout

\begin_layout BiographyNoPhoto
He has spent many years as a lifeboat Helmsman and is a keen sailor when
 time permits.
\end_layout

\end_body
\end_document
