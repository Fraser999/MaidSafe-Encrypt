<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram>
<source><![CDATA[#![maidsafe validity check]

SelfEncryption:Object
do_check:external[ep]
vault:vault
vault2:vault
vault3:Furthest existing vault (or lost rank)
vault4:new further vault
RefHolder:vault
RankHolder:vault
RankHolder2:vault
ChunkTable:DbObject
RoutingTable:DbObject
Kademlia:Object

do_check:vault.Internal Trigger
*3vault
This trigger happens on 
1: Chunk requested from this vault
2: 20 hr timer exceeded
3: Swapped chunk (no move)
4: Any node shows dirty data (check all own chunks)
5: Holders rank decreases (move this instead of farthest)
6: Vault startup (test1 only, plus self check 10%, on fail test all)
7: hourly check (test1 only)
*3
vault:ChunkTable.Get Chunk Partners
ChunkTable:RoutingTable.Get Contact info
RoutingTable:Kademlia.Get missing contacts
[c: Loop for all chunk partners]

vault:test1, check availability only (must be at least 3 on line)
vault:SelfEncryption.test2 create random data
vault:test2 send random data to partner
vault:test3 check rank of partner
vault:test4 check reference packet exists

[/c:]

[c: If test passes fo a node]
vault:RoutingTable.Get same rank and TTL
vault:find further away nodes than farthest you have
vault:ACK/NACK=vault4.can you swap with PMID (vault3)
vault:vault3.Ready to copy with this PMID (vault4)
vault3:copy chunk with ref add autheority=vault4.copy chunk with ref add authority
vault4:self delete from ref packet of existing chunk (cache chunk lose rank)
vault4:add to new ref packet (get rank)
vault4:new validity check (no move)
vault3:self delete from ref packet (cache chunk and lose rank)
vault3:add to new ref packet (get rank)
vault3:new validity check (no move)
[/c:]


[c: If test fails for any node]

[c: Loop till successful]
vault:RoutingTable.Get same rank and RTT
vault:Select suitable node
*2 vault
List all nodes by rank, then RTT, 
select nodes ranked sames or less, find 
furthest node.
*2
vault:vault2.Make a copy chunk (cache for now)
vault2:vault.OK
[/c:]
vault:>RankHolder.--Rank message {their PMID|ChunkName|Size[signed by vault]}
#
RankHolder:ACK/NACK=RefHolder.are both MID in ref packet
vault:RefHolder.chunk cached at PMID (vault2) (also self add if lost reference)
RankHolder:Trigger other vaults in refpacket
RankHolder:RankHolder.Wait for result (10 mins)
RankHolder:If another member of ref sends 
RankHolder:a --rank we accept it 
[c: If another matching --Rank is sent from other members of ref]
RankHolder:vault.Make a copy chunk permenent
RefHolder:OK=vault2.request store chunk (no IOU)
vault2:Check PMID of request matches RefHolder
*1vault
Although no IOU this increments a rank number 
which is the non iou rank number, this has a higher rating 
than an IOU number and increases the rank by 1%*SIZE
of machines total rank. Only refholder can ask this question.
*1
vault2:RefHolder.Add reference
RefHolder:RankHolder2.Increment rank PMID {PMID|SIZE|signed[RefHolder PMID} 
[/c:]
[/c:]]]></source>
<configuration>
<property name="actorWidth" value="25"/>
<property name="arrowSize" value="6"/>
<property name="colorizeThreads" value="true"/>
<property name="destructorWidth" value="30"/>
<property family="Dialog" name="font" size="12" style="0"/>
<property name="fragmentMargin" value="8"/>
<property name="fragmentPadding" value="10"/>
<property name="fragmentTextPadding" value="3"/>
<property name="glue" value="10"/>
<property name="headHeight" value="35"/>
<property name="headLabelPadding" value="5"/>
<property name="headWidth" value="100"/>
<property name="initialSpace" value="10"/>
<property name="leftMargin" value="5"/>
<property name="lineWrap" value="false"/>
<property name="lowerMargin" value="5"/>
<property name="mainLifelineWidth" value="8"/>
<property name="messageLabelSpace" value="3"/>
<property name="messagePadding" value="6"/>
<property name="noteMargin" value="6"/>
<property name="notePadding" value="6"/>
<property name="opaqueMessageText" value="false"/>
<property name="returnArrowVisible" value="true"/>
<property name="rightMargin" value="5"/>
<property name="selfMessageHorizontalSpace" value="15"/>
<property name="separatorBottomMargin" value="8"/>
<property name="separatorTopMargin" value="15"/>
<property name="spaceBeforeActivation" value="2"/>
<property name="spaceBeforeAnswerToSelf" value="10"/>
<property name="spaceBeforeConstruction" value="6"/>
<property name="spaceBeforeSelfMessage" value="7"/>
<property name="subLifelineWidth" value="6"/>
<property name="threadNumbersVisible" value="false"/>
<property name="threaded" value="true"/>
<property name="upperMargin" value="5"/>
<property name="verticallySplit" value="false"/>
</configuration>
</diagram>
